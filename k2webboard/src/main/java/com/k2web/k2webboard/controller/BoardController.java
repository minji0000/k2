package com.k2web.k2webboard.controller;import com.k2web.k2webboard.model.BoardDTO;import com.k2web.k2webboard.model.UserDTO;import com.k2web.k2webboard.repository.BoardRepository;import com.k2web.k2webboard.service.BoardService;import com.k2web.k2webboard.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.http.HttpSession;import java.util.HashMap;import java.util.List;@Controller@RequestMapping("/board")public class BoardController {    @Autowired    private BoardService boardService;    @Autowired    private UserService userService;    @Autowired    private BoardRepository boardRepository;    @RequestMapping("/selectAll")    private String showFirstPage() {        return "redirect:/board/showAll/1";    }    @RequestMapping("/showAll/{pageNo}")    private String showAll(Model model, HttpSession session, @PathVariable int pageNo) {        UserDTO logIn = (UserDTO) session.getAttribute("logIn");        if( logIn == null) {            return "redirect:/";        }        List<BoardDTO> list = boardService.selectAll(pageNo);        HashMap<Integer, String> nicknameMap = new HashMap<>();        for(BoardDTO b : list) {            nicknameMap.put(b.getWriterId(), userService.selectOne(b.getWriterId()).getNickname());        }        model.addAttribute("list", list);        model.addAttribute("nicknameMap", nicknameMap);        model.addAttribute("lastPageNo", boardService.selectLastPage());        return "/board/showAll";    }    @RequestMapping("/showOne/{id}")    public String selectOne(@PathVariable int id, HttpSession session, Model model) {        if (session.getAttribute("logIn") == null) {            return "redirect:/";        }        BoardDTO b = boardService.selectOne(id);        if (b == null) {            return "redirect:/board/showAll";        }        model.addAttribute("b", b);        model.addAttribute("nickname", userService.selectOne(b.getWriterId()).getNickname());        UserDTO logIn = (UserDTO) session.getAttribute("logIn");        model.addAttribute("logInId", logIn.getId());        // showOne.jsp 페이지로 이동한다.        return "board/showOne";    }    @RequestMapping("/init")    public String insertAll() {        for (int i = 1; i <= 73; i++) {            BoardDTO b = new BoardDTO();            b.setWriterId(8);            b.setTitle("제목" + i);            b.setContent("내용" + i + "입니다 ! !");            boardRepository.init(b);        }        return "redirect:/";    }}