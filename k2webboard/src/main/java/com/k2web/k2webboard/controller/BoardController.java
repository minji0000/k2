package com.k2web.k2webboard.controller;import com.k2web.k2webboard.model.BoardDTO;import com.k2web.k2webboard.model.UserDTO;import com.k2web.k2webboard.service.BoardService;import com.k2web.k2webboard.service.UserService;import lombok.RequiredArgsConstructor;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import javax.servlet.http.HttpSession;import java.util.List;@RequiredArgsConstructor@Controller@RequestMapping("/board")public class BoardController {    @Autowired    private final BoardService boardService;    @Autowired    private final UserService userService;    @RequestMapping("/selectAll")    private String showFirstPage() {        return "redirect:/board/showAll/1";    }    @RequestMapping("/showAll/{pageNo}")    private String showAll(Model model, HttpSession session, @PathVariable int pageNo) {        UserDTO logIn = (UserDTO) session.getAttribute("logIn");        if( logIn == null) {            return "redirect:/";        }        List<BoardDTO> list = boardService.selectAll(pageNo);        model.addAttribute("list", list);        model.addAttribute("lastPageNo", boardService.selectLastPage());        return "/board/showAll";    }    @RequestMapping(value = "/showOne/{boardId}", method = RequestMethod.GET)    public String selectOne(@PathVariable int boardId, HttpSession session, Model model) {        BoardDTO b = boardService.selectOne(boardId);        if (b == null) {            return "redirect:/board/showAll";        }        model.addAttribute("b", b);        model.addAttribute("nickname", userService.selectOne(b.getWriterId()).getNickname());        UserDTO logIn = (UserDTO) session.getAttribute("logIn");        model.addAttribute("logInId", logIn.getId());        return "board/showOne/{boardId}";    }    @RequestMapping(value = "/write", method = RequestMethod.GET)    private String register() {        return "/board/write";    }    @RequestMapping(value = "/write", method = RequestMethod.POST)    private String writeLogic(BoardDTO b, HttpSession session) {        UserDTO logIn = (UserDTO) session.getAttribute("logIn");        if (logIn == null) {            return "redirect:/";        }        b.setWriterId(logIn.getId());        b.setTitle(b.getTitle());        b.setContent(b.getContent());        boardService.insert(b);        return "redirect:/board/selectAll";    }    @RequestMapping(value = "/update", method = RequestMethod.POST)    private String updateLogic(BoardDTO b, HttpSession session) {        UserDTO logIn =(UserDTO) session.getAttribute("logIn");        if (logIn == null) {            return "redirect:/";        }        b.setWriterId(logIn.getId());        b.setTitle(b.getTitle());        b.setContent(b.getContent());        boardService.update(b);        return "redirect:/board/selectAll";    }    @RequestMapping(value = "/update", method = RequestMethod.GET)    private String update() {      return "board/showOne/{boardId}";    }    @RequestMapping(value = "/delete", method = RequestMethod.GET)    private String delete(int boardId) {        boardService.delete(boardId);        return "redirect:/board/selectAll";    }}